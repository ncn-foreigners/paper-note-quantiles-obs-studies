---
title: "Simulation for the entropy balancing method"
author: "Maciej BerÄ™sewicz"
format: 
  html:
    self-contained: true
    table-of-contents: true
    number-sections: true
    df-print: kable
editor: source
execute: 
  eval: true
  warning: false
  message: false
toc-title: Contents
lang: en
---

# Load packages

Packages and options for `xtable`.

```{r}
library(data.table)
library(ggplot2)
library(xtable)
library(stringr)
library(glue)
options(xtable.include.rownames = FALSE)
```

# Result for the simulation 1 -- entropy balancing

```{r}
sim1_results <- readRDS("../results/sim1-ebal-updated-1000.rds")
sim1_results[, count_rep := .N, rep] ## for 12 iterations were errors, so we remove them
sim1_results <- sim1_results[count_rep == 228]
sim1_results <- sim1_results[rep %in% unique(sim1_results$rep)[1:1000]] ## 500 reps
sim1_results[is.na(tau), est_p := est]
sim1_results[!is.na(tau), est_p := paste0(est, " (", str_pad(tau,4,"right", "0"), ")")]
sim1_results[, est_p:=factor(est_p, 
                             c("balance", "att", "qtt (0.10)", "qtt (0.25)", "qtt (0.50)", "qtt (0.75)", "qtt (0.90)"),
                             c("bal", "ATT", "QTT (0.10)", "QTT (0.25)", "QTT (0.50)", "QTT (0.75)", "QTT (0.90)"))]

sim1_results[, method:=str_remove(method, "w_")]
sim1_results[, method_l:=factor(method, c("ebal", "kbal", "deb1", "deb2"), c("EB", "KEB", "DEB MQ", "DEB MD"))]
```

Table 1

```{r}
sim1_results[var == "y3" & est_p != "bal", 
             .(Bias = mean(treat), Var = var(treat), RMSE = sqrt(mean(treat)^2 + var(treat))),
             .(design, est_p, method_l)] |> 
  melt(id.vars = c("design", "est_p", "method_l")) |> 
  dcast(variable + method_l + design ~ est_p, value.var = "value") |> 
  {\(x) x[order(design, variable, method_l)]}() |>
  ## uncomment for xtable
  transform(design = NULL) |>
  xtable(digits = 4)
```

Coverage rate for ATT based on M-Estimation

```{r}
sim1_results[est_p != "bal" & !is.na(ci_low), 
             .(cr = mean(ci_low < 0 & ci_upp > 0)*100), 
             .(design, method_l, var)] |>
  dcast(design + method_l ~ var,  value.var = "cr") |>
  transform(design = NULL) |>
  xtable()
```

Balance and ESS

```{r}
sim1_results[est_p == "bal", .(rep,design, method_l, x1,x2,x3,x4,x5,x6,over_kernel, over_ks,ess)] |>
  melt(id.vars = c("rep", "design", "method_l")) |>
  {\(x) x[, .(value=mean(value)), .(variable, design, method_l)]}() |>
  transform(value = ifelse(variable != "ess", value*100, value)) |>
  dcast(data=_, design + method_l ~ variable, value.var = "value") |>
  transform(design = NULL) |>
  xtable()
```

Additional plots on the balance

```{r}
sim1_results[est_p == "bal", .(rep,design, method_l, x1,x2,x3,x4,x5,x6,ess)] |>
  melt(id.vars = c("rep", "design", "method_l")) |>
  subset(variable != "ess") |>
  ggplot(data = _, aes(x = method_l, y = value*100)) +
  #geom_jitter(alpha = 0.05) + 
  geom_boxplot() +
  facet_grid(design~variable, labeller = labeller(
    design = c("d1"="D1 (strong sep, norm)",
               "d2"="D2 (weak sep, norm)",
               "d3"="D3 (medium sep, lep)"))) +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  labs(x = "Method", y = "KS statistic") -> p1

ggsave(plot = p1, filename = glue("../results/fig-sim-1-balance-boxplot.png"), width = 10, height = 5)

```

```{r}
sim1_results[est_p == "bal", .(rep,design, method_l, x1,x2,x3,x4,x5,x6,ess)] |>
  melt(id.vars = c("rep", "design", "method_l")) |>
  subset(variable == "ess") |>
  ggplot(data = _, aes(x = method_l, y = value)) +
  #geom_jitter(alpha = 0.05) + 
  geom_boxplot() +
  facet_wrap(~design, labeller = labeller(
    design = c("d1"="D1 (strong sep, norm)",
               "d2"="D2 (weak sep, norm)",
               "d3"="D3 (medium sep, lep)"))) +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  labs(x = "Method", y = "ESS") -> p1

ggsave(plot = p1, filename = glue("../results/fig-sim-1-ess-boxplot.png"), width = 7, height = 5)
```

Table A1 in Appendix

```{r}
sim1_results[var == "y1" & est_p != "bal", 
             .(Bias = mean(treat), Var = var(treat), RMSE = sqrt(mean(treat)^2 + var(treat))),
             .(design, est_p, method_l)] |> 
  melt(id.vars = c("design", "est_p", "method_l")) |> 
  dcast(variable + method_l + design ~ est_p, value.var = "value") |> 
  {\(x) x[order(design, variable, method_l)]}() |>
  ## uncomment for xtable
  transform(design = NULL) |>
  xtable(digits = 4)
```

Table A2 in the Appendix

```{r}
sim1_results[var == "y2" & est_p != "bal", 
             .(Bias = mean(treat), Var = var(treat), RMSE = sqrt(mean(treat)^2 + var(treat))),
             .(design, est_p, method_l)] |> 
  melt(id.vars = c("design", "est_p", "method_l")) |> 
  dcast(variable + method_l + design ~ est_p, value.var = "value") |> 
  {\(x) x[order(design, variable, method_l)]}() |>
  ## uncomment for xtable
  transform(design = NULL) |>
  xtable(digits = 4)
```

Additional plots

```{r}
for (des in c("d1", "d2", "d3")) {
  sim1_results[est_p != "bal", .(Bias = mean(treat), SE = sd(treat), RMSE = sqrt(mean(treat)^2 + var(treat))),
             .(design, est_p, method_l, var)] |> 
      melt(id.vars = c("design", "est_p", "method_l", "var")) |> 
      subset(design == des) |> 
      ggplot(data = _, aes(x = est_p, y = value, fill = method_l)) +
      geom_col(position = "dodge", color = "black") +
      facet_grid(var ~ variable , scales = "free", 
                 labeller = labeller(var = c("y1"="Y1\nlinear",
                                             "y2"="Y2\nmedium non-lin",
                                             "y3"="Y3\nstrong non-lin"))) +
      scale_fill_brewer(type = "qual", palette = "Set1") +
      theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
      labs(x = "Causal parameter", y = "Values (note different scales)", fill = "Estimator")
  ggsave(filename = glue("../results/fig-sim-1-ebal-{des}.png"), width = 7, height = 5)
}

```

Boxplots

```{r}
sim1_results[est_p != "bal"] |> 
  ggplot(data = _, aes(x = est_p, y = treat, color = method_l)) +
  geom_hline(yintercept = 0, linetype = "dashed") + 
  geom_boxplot(outlier.size = 0.5, size = 0.3) +
  facet_grid(var ~ design, scale = "free_y",
             labeller = labeller(var = c("y1"="Y1 (linear)", 
                                         "y2"="Y2 (weak non-lin)",
                                         "y3"="Y3 (stron non-lin)"),
                                 design = c("d1"="D1 (strong sep, norm)",
                                            "d2"="D2 (weak sep, norm)",
                                            "d3"="D3 (medium sep, lep)"))) +
  scale_color_brewer(type = "qual", palette = "Set1") +
  labs(x = "Causal parameter", y = "Value", color = "Method") +
  theme(axis.text.x = element_text(angle = 45, vjust=1,hjust=1)) -> p1

ggsave(plot = p1, filename = glue("../results/fig-sim-1-ebal-boxplot.png"), width = 7, height = 5)
```

# Result for the simulation 1 -- Propensity score

```{r}
sim2_results <- readRDS("../results/sim2-cbps-1000.rds") |> setDT()
sim2_results[is.na(tau), est_p := "ATE"]
sim2_results[!is.na(tau), est_p := paste0("QTE", " (", str_pad(tau,4,"right", "0"), ")")]
sim2_results[est == "balance", est_p:=NA]
sim2_results[, est_p:=as.factor(est_p)]

sim2_results[, method_l:=factor(method, 
                                c("IPS_ind", "IPS_exp", "IPS_proj", "CBPS_j", "DPS1_j", "DPS2_j", "CBPS_o", "DPS1_o", "DPS2_o"), 
                                c("IPS (exp)", "IPS (ind)", "IPS (proj)", 
                                  "CBPS (e)", "DPS (e MQ)", "DPS (e MD)", "CBPS (o)", "DPS (o MQ)", "DPS (o MD)"))]
sim2_results[,.N, method_l]
```

Table 2  and appendix 

```{r}
sim2_results |> 
  subset(!is.na(est_p)) |>
  {\(x) x[, .(Bias = mean(eff)-10, Var = var(eff), RMSE = sqrt( (mean(eff)-10)^2 + var(eff))), .(design=d, est_p, method_l)]}() |>
  melt(id.vars = c("design" , "est_p", "method_l"))  |>
  dcast(design + method_l + variable ~ est_p, value.var = "value") |>
  {\(x) x[order(design, variable, method_l)]}() -> results_tab1

results_tab1 |> 
  subset(design==1, select=-design) |> 
  xtable(digits = 4)

results_tab1 |> 
  subset(design==2, select=-design) |> 
  xtable(digits = 4)

```

Coverage rate for ATT based on M-Estimation

```{r}
sim2_results[!is.na(est_p), 
             .(cr = mean(eff-qnorm(1-0.05/2)*eff_se < 10 & eff+qnorm(1-0.05/2)*eff_se > 0)*100), 
             .(design=d, est_p, method_l)] |>
  dcast(design + method_l ~ est_p,  value.var = "cr") |>
  transform(design = NULL) |>
  xtable()
```

Balance and ESS

```{r}
sim2_results[est == "balance", .(rep,design=d, method_l, X1,X2,X3,X4, over_kernel, over_ks,sant_ks,sant_cvm, ess)] |>
  {\(x) x[, lapply(.SD, mean), keyby=.(design, method_l), .SDcols = X1:ess]}() |>
  transform(X1=X1*100,X2=X2*100,X3=X3*100,X4=X4*100) |>
  transform(design = NULL) |>
  xtable()
```

Additional plots on the balance

```{r}
sim2_results[est == "balance", .(rep, design=d, method_l, 
                                 sant_ks,sant_cvm
                                 #X1, X2, X3, X4, over_kernel, over_ks
                                 )] |>
  melt(id.vars = c("rep", "design", "method_l")) |>
  ggplot(data = _, aes(x = method_l, y = value)) +
  #geom_jitter(alpha = 0.05) + 
  geom_boxplot() +
  facet_grid(variable~design, labeller = labeller(
    design = c("1"="Design 1",
               "2"="Design 2 (mis-specified)"),
    variable = c("sant_ks"="KS",
                 "sant_cvm"="CVM"))) +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  labs(x = "Method", y = "Statistic") -> p1

ggsave(plot = p1, filename = glue("../results/fig-sim-2-balance-sant.png"), width = 7, height = 5)
```

```{r}
sim2_results[est == "balance", .(rep, design=d, method_l, 
                                 #sant_ks,sant_cvm
                                 X1, X2, X3, X4#, over_kernel, over_ks
                                 )] |>
  melt(id.vars = c("rep", "design", "method_l")) |>
  ggplot(data = _, aes(x = method_l, y = value)) +
  #geom_jitter(alpha = 0.05) + 
  geom_boxplot() +
  facet_grid(variable~design, labeller = labeller(
    design = c("1"="Design 1",
               "2"="Design 2 (mis-specified)"))) +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  labs(x = "Method", y = "KS Statistic") -> p1

ggsave(plot = p1, filename = glue("../results/fig-sim-2-balance-weight.png"), width = 7, height = 5)
```


```{r}
sim2_results[est == "balance", .(rep, design=d, method_l, 
                                 over_kernel, over_ks
                                 )] |>
  melt(id.vars = c("rep", "design", "method_l")) |>
  ggplot(data = _, aes(x = method_l, y = value)) +
  #geom_jitter(alpha = 0.05) + 
  geom_boxplot() +
  facet_grid(variable~design, labeller = labeller(
    design = c("1"="Design 1",
               "2"="Design 2 (mis-specified)"),
    variable = c("over_kernel"="Kernel distance",
                 "over_ks"="KS statistic"))) +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  labs(x = "Method", y = "Measure") -> p1

ggsave(plot = p1, filename = glue("../results/fig-sim-2-balance-weight-overall.png"), width = 7, height = 5)
```

```{r}
sim2_results[est == "balance", .(rep,design=d, method_l, ess)] |>
  melt(id.vars = c("rep", "design", "method_l")) |>
  ggplot(data = _, aes(x = method_l, y = value)) +
  #geom_jitter(alpha = 0.05) + 
  geom_boxplot() +
  facet_wrap(~design, labeller = labeller(
    design = c("1"="Design 1",
               "2"="Design 2 (mis-specified)"))) +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  labs(x = "Method", y = "ESS") -> p1

ggsave(plot = p1, filename = glue("../results/fig-sim-2-ess-boxplot.png"), width = 7, height = 5)
```

