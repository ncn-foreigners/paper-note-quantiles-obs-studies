---
title: "A minimal example with `WeightIt` package"
author: "Maciej BerÄ™sewicz"
format: 
  html:
    self-contained: true
    table-of-contents: true
    number-sections: true
    df-print: kable
editor: source
execute: 
  eval: true
  warning: false
  message: false
toc-title: Contents
lang: en
---

# Introduction

Here is a minimal example of how to use the [`WeightIt`](https://cran.r-project.org/package=WeightIt) package with the proposed approach.

# Installation

Load packages

```{r }
library(WeightIt)
library(cobalt)
library(marginaleffects) 
library(laeken) ## for weighted quantiles
library(CBPS) ## for LaLonde data
```

# Data and examples

## Data
Load data (3212 rows)

```{r}
data("LaLonde", package = "CBPS")
head(LaLonde)
```

Compare means with `cobalt::bal.tab`.

```{r}
bal.tab(treat ~ age + educ + black + hisp + married + nodegr + re74 + re75,
        data = LaLonde, estimand = "ATT", thresholds = c(m = .05))
```

## Standard entropy balancing

Initial weighting with entropy balancing.

```{r}
ebal_result1 <- weightit(treat ~ age + educ + black + hisp + married + nodegr + re74 + re75,
                         data = LaLonde, estimand = "ATT", method = "ebal")
summary(ebal_result1)
```

Balance statistics after entropy balancing.

```{r}
bal.tab(ebal_result1, stats = c("m", "v", "ks"), thresholds = c(m = .05))
```

## Entropy balancing with proposed approach -- step-by-step

Now calculate quantiles for continuous variables for the treatment group.

```{r}
age_tq <- with( subset(LaLonde, treat == 1), quantile(age))
educ_tq <- with( subset(LaLonde, treat == 1), quantile(educ))
re74_tq <- with( subset(LaLonde, treat == 1), quantile(re74))
re75_tq <- with( subset(LaLonde, treat == 1), quantile(re75))

n_t <- sum(LaLonde$treat) ## number of rows
```

Add new variables using the Heavyside function approximation using the logistic function. Here we only give an example for the median and Q3.

```{r}
LaLonde$age_50 <- with(LaLonde, plogis(-2000*(age-age_tq[3]))/n_t)
LaLonde$educ_50 <- with(LaLonde, plogis(-2000*(educ-educ_tq[3]))/n_t)
LaLonde$re74_50 <- with(LaLonde, plogis(-2000*(re74-re74_tq[3]))/n_t)
LaLonde$re75_50 <- with(LaLonde, plogis(-2000*(re75-re75_tq[3]))/n_t)

LaLonde$age_75 <- with(LaLonde, plogis(-2000*(age-age_tq[4]))/n_t)
LaLonde$educ_75 <- with(LaLonde, plogis(-2000*(educ-educ_tq[4]))/n_t)
LaLonde$re74_75 <- with(LaLonde, plogis(-2000*(re74-re74_tq[4]))/n_t)
LaLonde$re75_75 <- with(LaLonde, plogis(-2000*(re75-re75_tq[4]))/n_t)

```

Check that the variables sum to 0.5, as the treatment sample is small they may not sum to 0.5 (as in the `educ` variable).

```{r}
aggregate(age_50 ~ treat, LaLonde, sum)
aggregate(educ_50 ~ treat, LaLonde, sum)
aggregate(re74_50 ~ treat, LaLonde, sum)
aggregate(re75_50 ~ treat, LaLonde, sum)
```

Now add the newly handled variables to the `weightit` function.

```{r}
ebal_result2 <- weightit(treat ~ age + educ + black + hisp + married + nodegr + re74 + re75 +
                            age_50 + educ_50 + re74_50 + re75_50 + 
                            age_75 + educ_75 + re74_75 + re75_75,
                          data = LaLonde, estimand = "ATT", method = "ebal")
summary(ebal_result2)
```

Check that newly created variables are balanced.

```{r}
bal.tab(ebal_result2, stats = c("m", "v", "ks"), thresholds = c(m = .05))
```

Compare distribution of weights.

```{r}
plot(x=ebal_result1$weights, y=ebal_result2$weights, 
     xlim = c(0, 15), ylim = c(0, 15),
     xlab = "ebal with means", 
     ylab = "ebal with means and medians")
```

## Entropy balancing with proposed approach -- new implementation

Now, we will use the approach implemented in the new version of `WeightIt`. Note that `weightit` uses `plogis` as in the example above.

```{r}
ebal_result3 <- weightit(treat ~ age + educ + black + hisp + married + nodegr + re74 + re75,
                          data = LaLonde, estimand = "ATT", method = "ebal",
                         quantile = list(age = c(0.50, 0.75), 
                                         educ = c(0.50, 0.75),
                                         re74 = c(0.50, 0.75), 
                                         re75 = c(0.50, 0.75)))
summary(ebal_result3)
```

Check balance but note that variables listed in `quantile` are not reported. They are treated in a similar way as matching 2nd etc moments. 

```{r}
bal.tab(ebal_result3, stats = c("m", "v", "ks"), thresholds = c(m = .05))
```

Compare distribution of weights.

```{r}
plot(x=ebal_result2$weights, y=ebal_result3$weights, 
     xlim = c(0, 15), ylim = c(0, 15),
     xlab = "proposed approach (step-by-step)", 
     ylab = "weightit with proposed approach")
```

## Results

Add both weights to the `LaLonde` data.frame.

```{r}
LaLonde$weights1 <- ebal_result1$weights
LaLonde$weights2 <- ebal_result2$weights
```

Compare weighted medians for selected variables.

```{r}
data.frame(
  age_treat = with(subset(LaLonde, treat == 1), median(age)),
  age_before_cont = with(subset(LaLonde, treat == 0), median(age)),
  age_after_ebal1 = with(subset(LaLonde, treat == 0), weightedMedian(age, weights1)),
  age_after_ebal2 = with(subset(LaLonde, treat == 0), weightedMedian(age, weights2)) 
)

data.frame(
  educ_treat = with(subset(LaLonde, treat == 1), median(educ)),
  educ_before_cont = with(subset(LaLonde, treat == 0), median(educ)),
  educ_after_ebal1 = with(subset(LaLonde, treat == 0), weightedMedian(educ, weights1)),
  educ_after_ebal2 = with(subset(LaLonde, treat == 0), weightedMedian(educ, weights2)) 
)

data.frame(
  re74_treat = with(subset(LaLonde, treat == 1), median(re74)),
  re74_before_cont = with(subset(LaLonde, treat == 0), median(re74)),
  re74_after_ebal1 = with(subset(LaLonde, treat == 0), weightedMedian(re74, weights1)),
  re74_after_ebal2 = with(subset(LaLonde, treat == 0), weightedMedian(re74, weights2)) 
)

data.frame(
  re75_treat = with(subset(LaLonde, treat == 1), median(re75)),
  re75_before_cont = with(subset(LaLonde, treat == 0), median(re75)),
  re75_after_ebal1 = with(subset(LaLonde, treat == 0), weightedMedian(re75, weights1)),
  re75_after_ebal2 = with(subset(LaLonde, treat == 0), weightedMedian(re75, weights2)) 
)

```

We can also see that KS statistic is lower (thus better) for entropy balancing of means and medians.

```{r}
tab1 <- bal.tab(ebal_result1, stats = "ks")
tab2 <- bal.tab(ebal_result2, stats = "ks")
data.frame(vars = rownames(tab1$Balance)[1:8], 
           "EB"= tab1$Balance$KS.Adj[1:8]*100, 
           "DEB" = tab2$Balance$KS.Adj[1:8]*100)
```


Fit two models. We do not add `*_50` and `*_75` variables as they are only used to calibrate the weights. 

```{r}
fit1 <- lm(re78 ~ treat * (age + educ + black + hisp + married + nodegr + re74 + re75),
           data = LaLonde, weights = weights1)
fit2 <- lm(re78 ~ treat * (age + educ + black + hisp + married + nodegr + re74 + re75),
           data = LaLonde, weights = weights2)
```

Estimate ATT using the first set of weights and the `marginaleffects::avg_comparisons` function.

```{r}
avg_comparisons(fit1, variables = "treat",
                vcov = "HC3",
                newdata = subset(LaLonde, treat == 1),
                wts = "weights1")
```

Estimate ATT using the second set of weights and the `marginaleffects::avg_comparisons` function.

```{r}
avg_comparisons(fit2, 
                variables = "treat",
                vcov = "HC3",
                newdata = subset(LaLonde, treat == 1),
                wts = "weights2")
```

Compare QTT.

```{r}
data.frame(q = seq(0.1, 0.9, 0.1),
           QTT1 = with(subset(LaLonde, treat == 1), weightedQuantile(re78, weights1, seq(0.1, 0.9, 0.1))) - 
             with(subset(LaLonde, treat == 0), weightedQuantile(re78, weights1, seq(0.1, 0.9, 0.1))),
           QTT2 = with(subset(LaLonde, treat == 1), weightedQuantile(re78, weights2, seq(0.1, 0.9, 0.1))) - 
             with(subset(LaLonde, treat == 0), weightedQuantile(re78, weights2, seq(0.1, 0.9, 0.1))))
```

Some differences are observed from 0.6-quantile.
